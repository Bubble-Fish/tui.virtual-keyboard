!function t(i,e,n){function s(r,u){if(!e[r]){if(!i[r]){var o="function"==typeof require&&require;if(!u&&o)return o(r,!0);if(a)return a(r,!0);var c=new Error("Cannot find module '"+r+"'");throw c.code="MODULE_NOT_FOUND",c}var h=e[r]={exports:{}};i[r][0].call(h.exports,function(t){var e=i[r][1][t];return s(e?e:t)},h,h.exports,t,i,e,n)}return e[r].exports}for(var a="function"==typeof require&&require,r=0;r<n.length;r++)s(n[r]);return s}({1:[function(t,i,e){tui.util.defineNamespace("tui.component.VirtualKeyboard",t("./src/js/virtualKeyboard.js"))},{"./src/js/virtualKeyboard.js":2}],2:[function(t,i,e){var n=tui.util.defineClass({_template:{key:'<li><button type="button" value="{KEY}">{KEY}</button></li>',blank:"<li></li>"},_fixedKeys:{},_rawKeys:[],_identifiedRawKeys:[],_keyMap:{},_keySequences:[],_callback:{},_currentKeyType:null,_isEnglish:!1,_isSymbol:!1,_isCapsLock:!1,_documentFragment:null,init:function(t){this._initVariables(t||{}),this._arrangeKeySequence(),this._refineKeyMap(),this._initKeyboard(t.container),this._attachEvent(t.isClickOnly)},_initVariables:function(t){this._currentKeyType=t.keyType||"english",this._fixedKeys=t.functions||{},this._rawKeys=this._copyArray(t.keys),this._template=tui.util.extend(this._template,t.template),this._callback=t.callback||{},this._documentFragment=document.createDocumentFragment()},_attachEvent:function(t){var i=!t&&("createTouch"in document||"ontouchstart"in document),e=i?"touchstart":"click";this._$container.on(e,$.proxy(this._pressKeyHandler,this))},_pressKeyHandler:function(t){var i,e,n,s=this._getTargetButton(t.target);return!!tui.util.isExisty(s)&&(i=$(s).text(),e=this._keyMap[i].rawIndex,n=this._getKeyGroup(i),void("key"===n?this._excuteCallback(n,e):(this[i](),this._excuteCallback(i))))},_getTargetButton:function(t){return"BUTTON"===t.tagName.toUpperCase()?t:$(t).parent("button")[0]},_arrangeKeySequence:function(){var t;t=this._sortFixedKeys(),this._identifyRawKeys(),this._copyArray(this._identifiedRawKeys,this._keySequences),tui.util.forEach(t,function(t,i){tui.util.isExisty(t)&&this._keySequences.splice(this._fixedKeys[t],0,t)},this)},_identifyRawKeys:function(){var t=0;tui.util.forEach(this._rawKeys,function(i,e){"blank"===this._getKeyGroup(i)&&(i="blank"+t,t++),this._identifiedRawKeys[e]=i},this)},_copyArray:function(t,i){return!!tui.util.isExisty(t)&&(tui.util.isArray(t)||(t=[t]),tui.util.isExisty(i)&&tui.util.isArray(i)||(i=[]),tui.util.forEach(t,function(t,e){i[e]=t},this),i)},_sortFixedKeys:function(){var t;return this._keySequences.length=0,t=tui.util.keys(this._fixedKeys)||[],t.sort($.proxy(function(t,i){return this._fixedKeys[t]-this._fixedKeys[i]},this)),t},_refineKeyMap:function(){this._refineFixedKeys(),this._refineFloatingKeys()},_refineFixedKeys:function(){tui.util.forEach(this._fixedKeys,function(t,i){this._keyMap[i]={key:i,rawIndex:null,positionIndex:t,keyGroup:this._getKeyGroup(i)}},this)},_refineFloatingKeys:function(){tui.util.forEach(this._identifiedRawKeys,function(t,i){tui.util.isExisty(this._keyMap[t])?this._keyMap[t].positionIndex=this._getPositionIndex(t):this._keyMap[t]={key:t,rawIndex:i,positionIndex:this._getPositionIndex(t),keyGroup:this._getKeyGroup(this._rawKeys[i])}},this)},_getKeyGroup:function(t){var i;return i=tui.util.isExisty(this._fixedKeys[t])?"function":""===t?"blank":"key"},_getPositionIndex:function(t){for(var i=0,e=this._keySequences.length;i<e;i++)if(t===this._keySequences[i])return i},_initKeyboard:function(t){this._initContainer(t),this._arrangeKeys()},_initContainer:function(t){this._$container?tui.util.forEach(this._identifiedRawKeys,function(t){this._documentFragment.appendChild(this._keyMap[t].element)},this):(this._$container=$("#"+t),tui.util.isHTMLTag(this._$container[0])||(this._$container=this._createContainer()))},_createContainer:function(){var t="vk-"+this._getTime(),i=$("<ul id="+t+">");return $(document.body).append(i),i},_getTime:function(){var t;return Date.now&&(t=Date.now()||(new Date).getTime()),t},_arrangeKeys:function(){var t;tui.util.forEach(this._keySequences,function(i){t=this._keyMap[i].element,tui.util.isHTMLTag(t)||(this._keyMap[i].element=t=this._createKeyElement(i)),this._$container.append(t)},this)},_getTemplate:function(t,i){var e;return e="blank"===t?this._template.blank:this._template[i]||this._template.key,tui.util.isExisty(i)&&(e=e.replace(/{KEY}/g,i)),e},_createKeyElement:function(t){var i=this._keyMap[t].keyGroup,e=this._getTemplate(i,t),n=$(e),s=n.find("button");return!s.val()&&tui.util.isExisty(t)&&s.val(t),n[0]},_reArrangeKeys:function(t){this._rawKeys.length=0,this._keySequences.length=0,this._copyArray(t,this._rawKeys),this._arrangeKeySequence(),this._refineFloatingKeys(),this._arrangeKeys()},_excuteCallback:function(t,i){tui.util.isExisty(this._callback,t)&&tui.util.isFunction(this._callback[t])&&this._callback[t](i)},_getRawKeys:function(t){var i;tui.util.isExisty(this._callback,"getKeys")&&tui.util.isFunction(this._callback.getKeys)&&(i=t?this._callback.getKeys(this._currentKeyType,this._isCapsLock,!0):this._callback.getKeys(this._currentKeyType,this._isCapsLock)),tui.util.isArray(i)&&this._reArrangeKeys(i)},shuffle:function(){this._keySequences.length=0,this._initContainer(),this._getRawKeys()},language:function(){this._initContainer(),this._isEnglish=!this._isEnglish,this._currentKeyType=this._isEnglish?"english":"korean",this._getRawKeys()},caps:function(){this._initContainer(),this._isCapsLock=!this._isCapsLock,this._getRawKeys(!0)},symbol:function(){this._initContainer(),this._isSymbol=!this._isSymbol,this._currentKeyType=this._isSymbol?"symbol":"number",this._getRawKeys()},remove:function(){},clear:function(){},space:function(){},open:function(){this.shuffle(),this._$container.show()},close:function(){this.clear(),this._$container.hide()},done:function(){this.close()}});i.exports=n},{}]},{},[1]);